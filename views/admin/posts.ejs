<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title || 'Content Management' %> - Noot Admin
    </title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.0/axios.min.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#667eea',
                        secondary: '#764ba2',
                        accent: '#f093fb',
                        success: '#10b981',
                        warning: '#f59e0b',
                        error: '#ef4444',
                        dark: '#1f2937',
                        light: '#f9fafb'
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-in': 'slideIn 0.3s ease-out',
                        'bounce-in': 'bounceIn 0.6s ease-out',
                        'pulse-dot': 'pulse 2s infinite'
                    }
                }
            }
        }
    </script>
    <style>
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideIn {
            from {
                transform: translateX(-100%);
                opacity: 0;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes bounceIn {
            0% {
                transform: scale(0.3);
                opacity: 0;
            }

            50% {
                transform: scale(1.05);
            }

            70% {
                transform: scale(0.9);
            }

            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .glass-effect {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .card-hover {
            transition: all 0.3s ease;
        }

        .card-hover:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }

        .stat-number {
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .sidebar-item {
            transition: all 0.3s ease;
            position: relative;
        }

        .sidebar-item:hover {
            transform: translateX(4px);
        }

        .sidebar-item.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 0 4px 4px 0;
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
        }

        .data-table th,
        .data-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }

        .data-table th {
            background: #f9fafb;
            font-weight: 600;
            color: #374151;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .data-table tr:hover {
            background: #f9fafb;
        }

        .badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .badge.admin {
            background: #dbeafe;
            color: #1d4ed8;
        }

        .badge.moderator {
            background: #f3e8ff;
            color: #7c3aed;
        }

        .badge.warning {
            background: #fef3c7;
            color: #d97706;
        }

        .badge.user {
            background: #dcfce7;
            color: #16a34a;
        }

        .badge.banned {
            background: #fee2e2;
            color: #dc2626;
        }

        .badge.active {
            background: #dcfce7;
            color: #16a34a;
        }

        .badge.pending {
            background: #fef3c7;
            color: #d97706;
        }

        .badge.resolved {
            background: #dcfce7;
            color: #16a34a;
        }

        .badge.warning {
            background: #fef3c7;
            color: #d97706;
        }

        .line-clamp-3 {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .floating-action {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            z-index: 50;
        }

        .toast {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 1000;
            max-width: 400px;
            transform: translateX(100%);
            transition: transform 0.3s ease;
        }

        .toast.show {
            transform: translateX(0);
        }

        .sidebar-mobile-overlay {
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 40;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .sidebar-mobile-overlay.show {
            opacity: 1;
            visibility: visible;
        }

        @media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.show {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }
        }
    </style>
</head>

<body class="bg-gray-50 min-h-screen">
    <!-- Mobile Sidebar Overlay -->
    <div id="sidebarOverlay" class="sidebar-mobile-overlay lg:hidden"></div>

    <!-- Sidebar -->
    <div id="sidebar" class="sidebar fixed inset-y-0 left-0 z-50 w-64 gradient-bg text-white">
        <div class="flex items-center justify-between h-16 px-4 border-b border-white/10">
            <div class="flex items-center space-x-3">
                <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                    <span class="text-2xl">ðŸŽµ</span>
                </div>
                <div>
                    <h1 class="text-xl font-bold">Noot Admin</h1>
                    <p class="text-xs text-white/70">Music Social Platform</p>
                </div>
            </div>
            <!-- Mobile Close Button -->
            <button id="closeSidebar" class="lg:hidden p-2 text-white/70 hover:text-white">
                <i class="fas fa-times"></i>
            </button>
        </div>

        <nav class="mt-8 px-4 space-y-2">
            <a href="/admin"
                class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-home w-5 h-5 mr-3"></i>
                Dashboard
            </a>
            <a href="/admin/users"
                class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-users w-5 h-5 mr-3"></i>
                Users
                <!-- <span class="ml-auto bg-red-500 text-xs px-2 py-1 rounded-full" id="usersCount">0</span> -->
            </a>
            <a href="/admin/posts"
                class="sidebar-item active flex items-center px-4 py-3 text-sm font-medium rounded-lg bg-white/10 relative">
                <i class="fas fa-newspaper w-5 h-5 mr-3"></i>
                Posts
                <span class="ml-auto bg-blue-500 text-xs px-2 py-1 rounded-full" id="postsCount">
                    <%= (posts && posts.length) || 0 %>
                </span>
            </a>
            <a href="/admin/reports"
                class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-flag w-5 h-5 mr-3"></i>
                Reports
                <!-- <span class="ml-auto bg-yellow-500 text-xs px-2 py-1 rounded-full animate-pulse-dot"
                    id="reportsCount">0</span> -->
            </a>
            <a href="/admin/fanbases"
                class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-heart w-5 h-5 mr-3"></i>
                Fanbases
                <!-- <span class="ml-auto bg-pink-500 text-xs px-2 py-1 rounded-full" id="fanbasesCount">0</span> -->
            </a>
            <a href="/admin/analytics"
                class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-chart-bar w-5 h-5 mr-3"></i>
                Analytics
            </a>
            <a href="/admin/settings"
                class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-cog w-5 h-5 mr-3"></i>
                Settings
            </a>
        </nav>

        <div class="absolute bottom-4 left-4 right-4">
            <div class="glass-effect rounded-lg p-4">
                <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 rounded-full bg-white/20 flex items-center justify-center">
                        <i class="fas fa-user text-sm"></i>
                    </div>
                    <div class="flex-1 min-w-0">
                        <% if (typeof user !=='undefined' && user) { %>
                            <p class="text-sm font-medium text-white truncate">
                                <%= user.username || user.email %>
                            </p>
                            <p class="text-xs text-white/70 truncate">
                                <%= user.email %>
                            </p>
                            <% } else { %>
                                <p class="text-sm font-medium text-white truncate">Admin User</p>
                                <p class="text-xs text-white/70 truncate">admin@noot.com</p>
                                <% } %>
                    </div>
                </div>
                <form action="/admin/logout" method="POST" class="mt-3">
                    <button type="submit"
                        class="w-full px-3 py-2 text-xs font-medium text-white bg-white/10 rounded-lg hover:bg-white/20 transition-colors">
                        <i class="fas fa-sign-out-alt mr-2"></i>
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content lg:ml-64">
        <!-- Top Bar -->
        <header class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-30">
            <div class="flex items-center justify-between px-4 lg:px-6 py-4">
                <div class="flex items-center space-x-4">
                    <!-- Mobile Menu Button -->
                    <button id="openSidebar" class="lg:hidden p-2 text-gray-600 hover:text-gray-900">
                        <i class="fas fa-bars text-xl"></i>
                    </button>

                    <h2 class="text-xl lg:text-2xl font-bold text-gray-900">Content Management</h2>
                    
                </div>

                <div class="flex items-center space-x-2 lg:space-x-4">
                    <!-- Search -->
                    <div class="relative hidden md:block">
                        <input type="text" placeholder="Search..."
                            class="w-48 lg:w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                    </div>

                    <!-- Notifications -->
                    <button class="relative p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100">
                        <i class="fas fa-bell text-lg lg:text-xl"></i>
                        <span id="notificationBadge"
                            class="absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center hidden">0</span>
                    </button>

                    <!-- Profile -->
                    <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 rounded-full gradient-bg flex items-center justify-center">
                            <i class="fas fa-user text-white text-sm"></i>
                        </div>
                        <% if (typeof user !=='undefined' && user) { %>
                            <span
                                class="hidden sm:inline-flex px-3 py-1 text-sm font-medium text-purple-800 bg-purple-100 rounded-full">
                                <%= user.role %>
                            </span>
                            <% } %>
                    </div>
                </div>
            </div>
        </header>

        <!-- Page Content -->
        <main class="p-4 lg:p-6">
            <!-- Content Management -->
            <div class="space-y-6 animate-fade-in">
                <!-- Content Overview Stats -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                    <div class="bg-white rounded-xl shadow-sm p-6 card-hover border-l-4 border-green-500">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Total Posts</p>
                                <p class="text-2xl font-bold text-green-600 mt-1">
                                    <%= posts ? posts.length : 0 %>
                                </p>
                            </div>
                            <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                                <i class="fas fa-newspaper text-green-600 text-xl"></i>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-xl shadow-sm p-6 card-hover border-l-4 border-yellow-500">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Reported Posts</p>
                                <p class="text-2xl font-bold text-yellow-600 mt-1">
                                    <%= posts ? posts.filter(p=> p.isReported).length : 0 %>
                                </p>
                            </div>
                            <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                                <i class="fas fa-flag text-yellow-600 text-xl"></i>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-xl shadow-sm p-6 card-hover border-l-4 border-blue-500">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Popular Posts</p>
                                <p class="text-2xl font-bold text-blue-600 mt-1">
                                    <%= posts ? posts.filter(p=> (p.likesCount || 0) > 10).length : 0 %>
                                </p>
                            </div>
                            <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                                <i class="fas fa-heart text-blue-600 text-xl"></i>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-xl shadow-sm p-6 card-hover border-l-4 border-purple-500">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Today's Posts</p>
                                <p class="text-2xl font-bold text-purple-600 mt-1" id="todaysPostsCount">
                                    0
                                </p>
                            </div>
                            <div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
                                <i class="fas fa-clock text-purple-600 text-xl"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Content Filters -->
                <div class="bg-white rounded-xl shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-filter text-primary mr-2"></i>
                        Content Filters
                    </h3>
                    <form method="GET" action="/admin/posts"
                        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 gap-4 items-end">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Search Posts</label>
                            <input type="text" name="search"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                                placeholder="Song, artist, description..."
                                value="<%= (typeof searchQuery !== 'undefined' && searchQuery) ? searchQuery : '' %>">
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Content Status</label>
                            <select name="status"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                                <option value="">All Posts</option>
                                <option value="reported" <%=(typeof showReported !=='undefined' && showReported)
                                    ? 'selected' : '' %>>Reported Posts</option>
                                <option value="popular" <%=(typeof currentStatus !=='undefined' &&
                                    currentStatus==='popular' ) ? 'selected' : '' %>>Popular Posts</option>
                                <option value="recent" <%=(typeof currentStatus !=='undefined' &&
                                    currentStatus==='recent' ) ? 'selected' : '' %>>Recent Posts</option>
                            </select>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Date Range</label>
                            <select name="dateRange"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                                <option value="">All Time</option>
                                <option value="today" <%=(typeof currentDateRange !=='undefined' &&
                                    currentDateRange==='today' ) ? 'selected' : '' %>>Today</option>
                                <option value="week" <%=(typeof currentDateRange !=='undefined' &&
                                    currentDateRange==='week' ) ? 'selected' : '' %>>This Week</option>
                                <option value="month" <%=(typeof currentDateRange !=='undefined' &&
                                    currentDateRange==='month' ) ? 'selected' : '' %>>This Month</option>
                            </select>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Engagement</label>
                            <select name="engagement"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                                <option value="">All Engagement</option>
                                <option value="high" <%=(typeof currentEngagement !=='undefined' &&
                                    currentEngagement==='high' ) ? 'selected' : '' %>>High (10+ likes)</option>
                                <option value="medium" <%=(typeof currentEngagement !=='undefined' &&
                                    currentEngagement==='medium' ) ? 'selected' : '' %>>Medium (5-10 likes)</option>
                                <option value="low" <%=(typeof currentEngagement !=='undefined' &&
                                    currentEngagement==='low' ) ? 'selected' : '' %>>Low (< 5 likes)</option>
                            </select>
                        </div>

                        <div class="flex space-x-2">
                            <button type="submit"
                                class="flex-1 bg-primary text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-all duration-300 flex items-center justify-center">
                                <i class="fas fa-search mr-2"></i>
                                Filter
                            </button>
                            <a href="/admin/posts"
                                class="flex-1 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-all duration-300 flex items-center justify-center">
                                <i class="fas fa-times mr-2"></i>
                                Clear
                            </a>
                        </div>
                    </form>
                </div>

                <!-- Posts Grid -->
                <div class="bg-white rounded-xl shadow-sm overflow-hidden">
                    <div class="flex items-center justify-between p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">
                            <i class="fas fa-newspaper text-primary mr-2"></i>
                            Posts
                            <% if (pagination && pagination.totalPosts) { %>
                                <span class="text-sm font-normal text-gray-500">(<%= pagination.totalPosts %>
                                        total)</span>
                                <% } else if (posts) { %>
                                    <span class="text-sm font-normal text-gray-500">(<%= posts.length %> total)</span>
                                    <% } %>
                        </h3>
                        <div class="text-sm text-gray-500">
                            Manage and review content posts
                        </div>
                    </div>

                    <div class="p-6">
                        <% if (posts && posts.length> 0) { %>
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                <% posts.forEach(function(post, index) { %>
                                    <div class="bg-gray-50 rounded-lg p-4 card-hover transition-all duration-300 relative"
                                        data-post-id="<%= post.id %>">
                                        <!-- Status Badge -->
                                        <div class="absolute top-4 right-4 z-10 flex flex-col gap-1">
                                            <% if (post.isReported) { %>
                                                <span class="badge banned">
                                                    <i class="fas fa-flag mr-1"></i>
                                                    <%= post.reportCount %> Report<%= post.reportCount > 1 ? 's' : '' %>
                                                </span>
                                                <% if (post.pendingReportsCount > 0) { %>
                                                <span class="badge warning text-xs">
                                                    <%= post.pendingReportsCount %> Pending
                                                </span>
                                                <% } %>
                                                <% } else { %>
                                                    <span class="badge active">
                                                        <i class="fas fa-check mr-1"></i>
                                                        Active
                                                    </span>
                                                    <% } %>
                                        </div>

                                        <!-- Album Art / Music Info -->
                                        <div class="flex items-center space-x-3 mb-4 mt-6">
                                            <!-- Updated: albumArt instead of albumImage -->
                                            <% if (post.albumArt) { %>
                                                <img src="<%= post.albumArt %>" alt="Album Art"
                                                    class="w-16 h-16 rounded-lg object-cover shadow-md">
                                                <% } else { %>
                                                    <div
                                                        class="w-16 h-16 gradient-bg rounded-lg flex items-center justify-center shadow-md">
                                                        <i class="fas fa-music text-white text-xl"></i>
                                                    </div>
                                                    <% } %>
                                                        <div class="flex-1 min-w-0">
                                                            <!-- Updated: songTitle instead of songName -->
                                                            <h4 class="font-semibold text-gray-900 truncate">
                                                                <%= post.songTitle || 'Unknown Song' %>
                                                            </h4>
                                                            <!-- Updated: artistName instead of artists -->
                                                            <p class="text-sm text-gray-600 truncate">
                                                                by <%= post.artistName || 'Unknown Artist' %>
                                                            </p>
                                                            <!-- Show username -->
                                                            <p class="text-xs text-gray-500 truncate">
                                                                Posted by: <%= post.username || 'Anonymous' %>
                                                            </p>
                                                        </div>
                                        </div>

                                        <!-- Post Description -->
                                        <div class="mb-4">
                                            <!-- Updated: description instead of caption -->
                                            <p class="text-sm text-gray-700 line-clamp-3">
                                                <% if (post.description && post.description.length> 120) { %>
                                                    <%= post.description.substring(0, 120) %>...
                                                        <button onclick="viewPost('<%= post.id %>')"
                                                            class="text-primary hover:underline text-xs ml-1">
                                                            Read more
                                                        </button>
                                                        <% } else { %>
                                                            <%= post.description || 'No description provided' %>
                                                                <% } %>
                                            </p>
                                        </div>

                                        <!-- Engagement Stats -->
                                        <div class="flex items-center justify-between mb-4">
                                            <div class="flex items-center space-x-4 text-sm text-gray-500">
                                                <span class="flex items-center">
                                                    <i class="fas fa-heart text-red-500 mr-1"></i>
                                                    <%= post.likesCount || 0 %>
                                                </span>
                                                <span class="flex items-center">
                                                    <i class="fas fa-comment text-blue-500 mr-1"></i>
                                                    <%= post.commentsCount || 0 %>
                                                </span>
                                                <span class="flex items-center">
                                                    <i class="fas fa-share text-green-500 mr-1"></i>
                                                    <%= post.sharesCount || 0 %>
                                                </span>
                                            </div>
                                            <span class="text-xs text-gray-400">
                                                <%= new Date(post.createdAt).toLocaleDateString() %>
                                            </span>
                                        </div>

                                        <!-- Post Meta -->
                                        <!-- <div class="border-t pt-3 mb-4">
                                            <div class="text-xs text-gray-500 space-y-1">
                                                <div>Post ID: <%= post.id %>
                                                </div>
                                                <div>User ID: <%= post.userId || 'Unknown' %>
                                                </div>
                                                <div>Track ID: <%= post.trackId || 'N/A' %>
                                                </div>
                                            </div>
                                        </div> -->

                                        <!-- Action Buttons -->
                                        <div class="flex items-center space-x-2">
                                            <button onclick="viewPost('<%= post.id %>')"
                                                class="flex-1 bg-blue-500 text-white text-xs px-3 py-2 rounded-lg hover:bg-blue-600 transition-colors">
                                                <i class="fas fa-eye mr-1"></i>
                                                View
                                            </button>
                                            <% if (post.isReported && post.pendingReportsCount > 0) { %>
                                                <button onclick="viewReports('<%= post.id %>')"
                                                    class="flex-1 bg-yellow-500 text-white text-xs px-3 py-2 rounded-lg hover:bg-yellow-600 transition-colors">
                                                    <i class="fas fa-flag mr-1"></i>
                                                    Reports
                                                </button>
                                                <% } else if (post.isReported) { %>
                                                <button onclick="viewReports('<%= post.id %>')"
                                                    class="flex-1 bg-gray-500 text-white text-xs px-3 py-2 rounded-lg hover:bg-gray-600 transition-colors">
                                                    <i class="fas fa-eye mr-1"></i>
                                                    View Reports
                                                </button>
                                                <% } %>
                                                    <button onclick="deletePost('<%= post.id %>')"
                                                        class="bg-red-500 text-white text-xs px-3 py-2 rounded-lg hover:bg-red-600 transition-colors">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                            <% } else { %>
                                <div class="text-center py-12">
                                    <i class="fas fa-newspaper text-gray-300 text-6xl mb-4"></i>
                                    <h3 class="text-lg font-medium text-gray-900 mb-2">No Posts Found</h3>
                                    <p class="text-gray-500 mb-4">No posts match your current filters.</p>
                                    <a href="/admin/posts"
                                        class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-colors">
                                        <i class="fas fa-refresh mr-2"></i>
                                        View All Posts
                                    </a>
                                </div>
                                <% } %>
                    </div>
                </div>

                <!-- Pagination -->
                <% if (pagination && pagination.total> 1) { %>
                    <div class="flex items-center justify-between bg-white px-6 py-4 rounded-xl shadow-sm">
                        <div class="text-sm text-gray-700">
                            <%
                                const currentPage = pagination.current || 1;
                                const itemsPerPage = pagination.limit || 20;
                                const totalItems = pagination.totalPosts || 0;
                                const startItem = ((currentPage - 1) * itemsPerPage) + 1;
                                const endItem = Math.min(currentPage * itemsPerPage, totalItems);

                                // Helper function to build URLs with current filters
                                const buildPageUrl = (pageNum) => {
                                    const params = new URLSearchParams();
                                    params.set('page', pageNum);
                                    if (typeof searchQuery !== 'undefined' && searchQuery) params.set('search', searchQuery);
                                    if (typeof currentStatus !== 'undefined' && currentStatus) params.set('status', currentStatus);
                                    if (typeof currentDateRange !== 'undefined' && currentDateRange) params.set('dateRange', currentDateRange);
                                    if (typeof currentEngagement !== 'undefined' && currentEngagement) params.set('engagement', currentEngagement);
                                    if (typeof showReported !== 'undefined' && showReported) params.set('reported', 'true');
                                    return '?' + params.toString();
                                };
                            %>
                            Showing <%= startItem %> to <%= endItem %> of <%= totalItems %> posts
                        </div>
                        <div class="flex items-center space-x-2">
                            <% if (pagination.current> 1) { %>
                                <a href="<%= buildPageUrl(pagination.current - 1) %>"
                                    class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                                    <i class="fas fa-chevron-left mr-1"></i>
                                    Previous
                                </a>
                                <% } %>

                                    <% for (let i=Math.max(1, pagination.current - 2); i <=Math.min(pagination.total,
                                        pagination.current + 2); i++) { %>
                                        <a href="<%= buildPageUrl(i) %>"
                                            class="px-3 py-2 text-sm font-medium <%= i === pagination.current ? 'text-white bg-primary' : 'text-gray-500 bg-white hover:bg-gray-50' %> border border-gray-300 rounded-lg transition-colors">
                                            <%= i %>
                                        </a>
                                        <% } %>

                                            <% if (pagination.current < pagination.total) { %>
                                                <a href="<%= buildPageUrl(pagination.current + 1) %>"
                                                    class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                                                    Next
                                                    <i class="fas fa-chevron-right ml-1"></i>
                                                </a>
                                                <% } %>
                        </div>
                    </div>
                    <% } %>
            </div>
        </main>
    </div>

    <!-- Post Detail Modal -->
    <div id="postModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
        <div class="bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
            <div class="flex items-center justify-between p-6 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">
                    <i class="fas fa-newspaper text-primary mr-2"></i>
                    Post Details
                </h3>
                <button onclick="closePostModal()"
                    class="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div id="postModalContent" class="p-6">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>

    <!-- Review Post Modal -->
    <div id="reviewModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
        <div class="bg-white rounded-xl shadow-2xl w-full max-w-md">
            <div class="flex items-center justify-between p-6 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">
                    <i class="fas fa-gavel text-primary mr-2"></i>
                    Review Post
                </h3>
                <button onclick="closeReviewModal()"
                    class="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="reviewForm" class="p-6 space-y-4">
                <input type="hidden" id="reviewPostId" name="postId">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Review Action</label>
                    <select name="action" required
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                        <option value="">Select Action</option>
                        <option value="approve">Approve (dismiss all reports for this post)</option>
                        <option value="dismiss">Dismiss (keep post but mark reports as invalid)</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Review Notes</label>
                    <textarea name="notes" rows="3" placeholder="Add your review notes..."
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"></textarea>
                </div>
                <div class="flex space-x-4 pt-4">
                    <button type="button" onclick="closeReviewModal()"
                        class="flex-1 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-colors">
                        Cancel
                    </button>
                    <button type="submit"
                        class="flex-1 bg-primary text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-colors">
                        Submit Review
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Reports Modal -->
    <div id="reportsModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
        <div class="bg-white rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col">
            <!-- Header -->
            <div class="flex justify-between items-center p-6 border-b border-gray-200">
                <h3 class="text-xl font-semibold text-gray-900">Post Reports</h3>
                <button onclick="closeReportsModal()" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>

            <!-- Reports Content -->
            <div id="reportsContent" class="flex-1 overflow-y-auto p-6">
                <!-- Reports will be loaded here -->
                <div class="flex items-center justify-center h-32">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
        <div class="bg-white rounded-lg p-6 flex items-center space-x-3">
            <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-primary"></div>
            <span class="text-gray-700">Loading...</span>
        </div>
    </div>

    <script>

        // Mobile sidebar functionality
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        const openSidebarBtn = document.getElementById('openSidebar');
        const closeSidebarBtn = document.getElementById('closeSidebar');

        function openSidebar() {
            sidebar.classList.add('show');
            sidebarOverlay.classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function closeSidebar() {
            sidebar.classList.remove('show');
            sidebarOverlay.classList.remove('show');
            document.body.style.overflow = '';
        }

        if (openSidebarBtn) {
            openSidebarBtn.addEventListener('click', openSidebar);
        }

        if (closeSidebarBtn) {
            closeSidebarBtn.addEventListener('click', closeSidebar);
        }

        if (sidebarOverlay) {
            sidebarOverlay.addEventListener('click', closeSidebar);
        }

        // Toast notifications
        function showToast(message, type = 'info') {
            const toastContainer = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `toast px-6 py-4 rounded-lg shadow-lg flex items-center space-x-3 ${type === 'success' ? 'bg-green-500 text-white' :
                    type === 'error' ? 'bg-red-500 text-white' :
                        type === 'warning' ? 'bg-yellow-500 text-white' :
                            'bg-blue-500 text-white'
                }`;

            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'exclamation-triangle' : type === 'warning' ? 'exclamation' : 'info'}-circle"></i>
                <span>${message}</span>
                <button onclick="this.parentElement.remove()" class="ml-4 text-white/70 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            `;

            toastContainer.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('show');
            }, 100);

            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 5000);
        }

        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('hidden');
        }

        function confirmAction(message) {
            return confirm(message);
        }


        async function deletePost(postId) {
            const reason = prompt('Enter deletion reason:');
            if (!reason) return;

            if (!confirmAction('Are you sure you want to delete this post?')) return;

            try {
                showLoading();
                const response = await axios.delete(`/admin/posts/${postId}`, {
                    data: {
                        reason,
                        deletedBy: '<%= user ? user.id : "" %>'
                    }
                });

                if (response.status === 200) {
                    showToast('Post deleted successfully', 'success');
                    setTimeout(() => window.location.reload(), 1000);
                }
            } catch (error) {
                showToast('Failed to delete post: ' + (error.response?.data?.message || error.message), 'error');
            } finally {
                hideLoading();
            }
        }

        async function viewPost(postId) {
            try {
                showLoading();
                const response = await axios.get(`/admin/posts/${postId}`);

                if (response.status === 200) {
                    const post = response.data;
                    showPostModal(post);
                }
            } catch (error) {
                showToast('Failed to load post details: ' + (error.response?.data?.message || error.message), 'error');
            } finally {
                hideLoading();
            }
        }

        function showPostModal(post) {
            const modal = document.getElementById('postModal');
            const content = document.getElementById('postModalContent');

            content.innerHTML = `
        <div class="space-y-6">
            <div class="flex items-center space-x-4">
                ${post.albumArt ?
                    `<img src="${post.albumArt}" alt="Album Art" class="w-20 h-20 rounded-lg object-cover shadow-md">` :
                    `<div class="w-20 h-20 gradient-bg rounded-lg flex items-center justify-center shadow-md">
                        <i class="fas fa-music text-white text-2xl"></i>
                    </div>`
                }
                <div class="flex-1">
                    <h4 class="text-xl font-semibold text-gray-900">${post.songTitle || 'Unknown Song'}</h4>
                    <p class="text-gray-600 mb-2">by ${post.artistName || 'Unknown Artist'}</p>
                    <p class="text-sm text-gray-500 mb-2">Posted by: ${post.username || 'Anonymous'}</p>
                    <div class="flex items-center space-x-4 text-sm">
                        <span class="flex items-center text-red-500">
                            <i class="fas fa-heart mr-1"></i>
                            ${post.likesCount || 0}
                        </span>
                        <span class="flex items-center text-blue-500">
                            <i class="fas fa-comment mr-1"></i>
                            ${post.commentsCount || 0}
                        </span>
                        <span class="badge ${post.isReported ? 'banned' : 'active'}">
                            ${post.isReported ? 'Reported' : 'Active'}
                        </span>
                    </div>
                </div>
            </div>
            
            <div>
                <h5 class="font-medium text-gray-900 mb-2">Description</h5>
                <div class="bg-gray-50 p-4 rounded-lg">
                    <p class="text-gray-700 leading-relaxed">
                        ${post.description || 'No description provided'}
                    </p>
                </div>
            </div>
            
            <div class="grid grid-cols-2 gap-6">
                <div>
                    <h5 class="font-medium text-gray-900 mb-2">Post Information</h5>
                    <div class="space-y-2 text-sm">
                        
                        
                        <div class="flex justify-between">
                            <span class="text-gray-600">User:</span>
                            <span class="text-gray-900">${post.username || 'Unknown'}</span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-600">Created:</span>
                            <span class="text-gray-900">${new Date(post.createdAt).toLocaleString()}</span>
                        </div>
                    </div>
                </div>
                
                <div>
                    <h5 class="font-medium text-gray-900 mb-2">Engagement Stats</h5>
                    <div class="space-y-2 text-sm">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Likes:</span>
                            <span class="text-gray-900">${post.likesCount || 0}</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Comments:</span>
                            <span class="text-gray-900">${post.commentsCount || 0}</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Shares:</span>
                            <span class="text-gray-900">${post.sharesCount || 0}</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="flex space-x-4 pt-4 border-t">
                ${post.isReported ? `
                <button onclick="reviewPost('${post.id}')" class="flex-1 bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-colors">
                    <i class="fas fa-gavel mr-2"></i>
                    Review Report
                </button>
                ` : ''}
                <button onclick="deletePost('${post.id}')" class="flex-1 bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-colors">
                    <i class="fas fa-trash mr-2"></i>
                    Delete Post
                </button>
                <button onclick="closePostModal()" class="flex-1 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-opacity-90 transition-colors">
                    <i class="fas fa-times mr-2"></i>
                    Close
                </button>
            </div>
        </div>
    `;

            modal.classList.remove('hidden');
        }

        function closePostModal() {
            document.getElementById('postModal').classList.add('hidden');
        }

        function reviewPost(postId) {
            document.getElementById('reviewPostId').value = postId;
            closePostModal();
            document.getElementById('reviewModal').classList.remove('hidden');
        }

        function closeReviewModal() {
            document.getElementById('reviewModal').classList.add('hidden');
            document.getElementById('reviewForm').reset();
        }


        // Review form submission
        document.getElementById('reviewForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const formData = new FormData(e.target);
            const reviewData = {
                postId: formData.get('postId'),
                action: formData.get('action'),
                notes: formData.get('notes'),
                reviewedBy: '<%= user ? user._id || user.id : "" %>'
            };

            try {
                showLoading();
                let endpoint;
                let payload = {
                    adminNotes: reviewData.notes
                };

                // Determine endpoint based on action
                if (reviewData.action === 'approve') {
                    endpoint = `/admin/reports/post/${reviewData.postId}/approve`;
                } else if (reviewData.action === 'dismiss') {
                    endpoint = `/admin/reports/post/${reviewData.postId}/dismiss`;
                } else {
                    throw new Error('Invalid action selected');
                }

                const response = await axios.post(endpoint, payload);

                if (response.status === 200) {
                    showToast(`Post ${reviewData.action}d successfully`, 'success');
                    closeReviewModal();

                    // Update the post card immediately instead of reloading page
                    updatePostCard(reviewData.postId);
                    setTimeout(() => window.location.reload(), 2000);
                }
            } catch (error) {
                showToast('Failed to review post: ' + (error.response?.data?.message || error.message), 'error');
            } finally {
                hideLoading();
            }
        });

        // Close modals when clicking outside
        document.getElementById('postModal').addEventListener('click', (e) => {
            if (e.target.id === 'postModal') {
                closePostModal();
            }
        });

        document.getElementById('reviewModal').addEventListener('click', (e) => {
            if (e.target.id === 'reviewModal') {
                closeReviewModal();
            }
        });

        // Calculate today's posts using client-side date (respects user timezone)
        function calculateTodaysPosts() {
            try {
                const posts = <%- JSON.stringify(posts || []) %>;
                const today = new Date();
                today.setHours(0, 0, 0, 0); // Start of today in user's timezone

                const tomorrow = new Date(today);
                tomorrow.setDate(tomorrow.getDate() + 1); // Start of tomorrow

                const todaysPosts = posts.filter(post => {
                    const postDate = new Date(post.createdAt);
                    return postDate >= today && postDate < tomorrow;
                });

                const todaysPostsElement = document.getElementById('todaysPostsCount');
                if (todaysPostsElement) {
                    todaysPostsElement.textContent = todaysPosts.length;
                }
            } catch (error) {
                console.error('Error calculating today\'s posts:', error);
                const todaysPostsElement = document.getElementById('todaysPostsCount');
                if (todaysPostsElement) {
                    todaysPostsElement.textContent = '0';
                }
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function () {
            calculateTodaysPosts();

            // Auto-refresh post stats every 60 seconds
            setInterval(async () => {
                if (document.visibilityState === 'visible') {
                    try {
                        const response = await axios.get('/admin/api/posts-stats');

                        if (response.status === 200) {
                            const stats = response.data;
                            // Update stats in the overview cards
                            const totalElement = document.querySelector('.border-green-500 .text-2xl');
                            const reportedElement = document.querySelector('.border-yellow-500 .text-2xl');
                            const popularElement = document.querySelector('.border-blue-500 .text-2xl');
                            const todayElement = document.querySelector('.border-purple-500 .text-2xl');

                            if (totalElement) totalElement.textContent = stats.total || 0;
                            if (reportedElement) reportedElement.textContent = stats.reported || 0;
                            if (popularElement) popularElement.textContent = stats.popular || 0;
                            if (todayElement) todayElement.textContent = stats.today || 0;
                        }
                    } catch (error) {
                        console.log('Failed to refresh post stats:', error);
                    }
                }
            }, 60000);

            // Add fade-in animation to content
            const main = document.querySelector('main');
            if (main) {
                main.style.opacity = '0';
                main.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    main.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    main.style.opacity = '1';
                    main.style.transform = 'translateY(0)';
                }, 100);
            }
        });

        // ==================== REPORT MANAGEMENT FUNCTIONS ====================

        function viewReports(postId) {
            const modal = document.getElementById('reportsModal');
            const content = document.getElementById('reportsContent');

            // Show modal
            modal.classList.remove('hidden');

            // Show loading
            content.innerHTML = `
                <div class="flex items-center justify-center h-32">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
                </div>
            `;

            // Fetch reports for this post
            fetchPostReports(postId);
        }

        function closeReportsModal() {
            const modal = document.getElementById('reportsModal');
            modal.classList.add('hidden');
        }

        async function fetchPostReports(postId) {
            try {
                const response = await axios.get(`/admin/api/reports/post/${postId}`);

                if (response.data && response.data.success) {
                    const reports = response.data.data;
                    displayReports(reports);
                } else {
                    throw new Error('Failed to fetch reports');
                }
            } catch (error) {
                const content = document.getElementById('reportsContent');
                content.innerHTML = `
                    <div class="text-center py-8">
                        <div class="text-red-500 mb-2">
                            <i class="fas fa-exclamation-triangle text-3xl"></i>
                        </div>
                        <p class="text-gray-600">Failed to load reports</p>
                        <p class="text-sm text-gray-500 mt-1">${error.message}</p>
                    </div>
                `;
                console.error('Error fetching reports:', error);
            }
        }

        function displayReports(reports) {
            const content = document.getElementById('reportsContent');

            if (!reports || reports.length === 0) {
                content.innerHTML = `
                    <div class="text-center py-8">
                        <div class="text-gray-400 mb-2">
                            <i class="fas fa-inbox text-3xl"></i>
                        </div>
                        <p class="text-gray-600">No reports found for this post</p>
                    </div>
                `;
                return;
            }

            const reportsHTML = reports.map(report => {
                const statusColor = {
                    'pending': 'text-yellow-600 bg-yellow-100',
                    'approved': 'text-green-600 bg-green-100',
                    'rejected': 'text-red-600 bg-red-100'
                };

                const statusIcon = {
                    'pending': 'fas fa-clock',
                    'approved': 'fas fa-check-circle',
                    'rejected': 'fas fa-times-circle'
                };

                return `
                    <div class="bg-gray-50 rounded-lg p-4 mb-4">
                        <div class="flex justify-between items-start mb-3">
                            <div class="flex items-center space-x-2">
                                <span class="px-2 py-1 text-xs font-medium rounded-full ${statusColor[report.status] || statusColor.pending}">
                                    <i class="${statusIcon[report.status] || statusIcon.pending} mr-1"></i>
                                    ${report.status.charAt(0).toUpperCase() + report.status.slice(1)}
                                </span>
                                <span class="text-sm text-gray-500">
                                    Reported ${new Date(report.createdAt).toLocaleDateString()}
                                </span>
                            </div>
                            ${report.status === 'pending' ? `
                                <div class="flex space-x-2">
                                    <button onclick="reviewReport('${report._id}', 'approved')"
                                            class="px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600 transition-colors">
                                        <i class="fas fa-check mr-1"></i>
                                        Approve
                                    </button>
                                    <button onclick="reviewReport('${report._id}', 'rejected')"
                                            class="px-3 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600 transition-colors">
                                        <i class="fas fa-times mr-1"></i>
                                        Reject
                                    </button>
                                </div>
                            ` : ''}
                        </div>

                        <div class="mb-2">
                            <p class="text-sm font-medium text-gray-900">Reason:</p>
                            <p class="text-sm text-gray-700">${report.reason}</p>
                        </div>

                        ${report.adminNotes ? `
                            <div class="mb-2">
                                <p class="text-sm font-medium text-gray-900">Admin Notes:</p>
                                <p class="text-sm text-gray-700">${report.adminNotes}</p>
                            </div>
                        ` : ''}

                        ${report.reviewedBy && report.reviewedAt ? `
                            <div class="text-xs text-gray-500 mt-2 pt-2 border-t border-gray-200">
                                Reviewed by ${report.reviewedBy} on ${new Date(report.reviewedAt).toLocaleDateString()}
                            </div>
                        ` : ''}
                    </div>
                `;
            }).join('');

            content.innerHTML = `
                <div class="space-y-4">
                    <div class="mb-4">
                        <h4 class="text-lg font-semibold text-gray-900">
                            ${reports.length} Report${reports.length > 1 ? 's' : ''}
                        </h4>
                        <p class="text-sm text-gray-600">
                            ${reports.filter(r => r.status === 'pending').length} pending,
                            ${reports.filter(r => r.status === 'approved').length} approved,
                            ${reports.filter(r => r.status === 'rejected').length} rejected
                        </p>
                    </div>
                    ${reportsHTML}
                </div>
            `;
        }

        async function reviewReport(reportId, status) {
            const adminNotes = prompt(`Enter admin notes for this ${status} decision (optional):`);

            if (confirm(`Are you sure you want to ${status} this report?`)) {
                try {
                    showLoading();

                    // Fix the endpoint URL - use 'approve' instead of 'approved' and 'reject' instead of 'rejected'
                    const endpoint = status === 'approved' ? 'approve' : status === 'rejected' ? 'reject' : status;
                    const response = await axios.post(`/admin/reports/${reportId}/${endpoint}`, {
                        adminNotes: adminNotes || undefined
                    });

                    if (response.status === 200) {
                        showToast(`Report ${status} successfully`, 'success');

                        // Refresh the reports modal
                        const postId = getCurrentPostId(); // We need to store this when opening the modal
                        if (postId) {
                            fetchPostReports(postId);
                        }

                        // Refresh the page to update post badges
                        setTimeout(() => window.location.reload(), 1000);
                    }
                } catch (error) {
                    showToast(`Failed to ${status} report: ` + (error.response?.data?.message || error.message), 'error');
                } finally {
                    hideLoading();
                }
            }
        }

        // Store current post ID for report actions
        let currentPostId = null;

        // Update the viewReports function to store the post ID
        const originalViewReports = viewReports;
        viewReports = function(postId) {
            currentPostId = postId;
            originalViewReports(postId);
        };

        function getCurrentPostId() {
            return currentPostId;
        }

        async function updatePostCard(postId) {
            try {
                const response = await axios.get(`/admin/posts/${postId}`);
                if (response.status === 200) {
                    const post = response.data;

                    // Find the post card and update its status badges
                    const postCard = document.querySelector(`[data-post-id="${postId}"]`);
                    if (postCard) {
                        // Update status badge
                        const statusBadge = postCard.querySelector('.absolute.top-4.right-4.z-10');
                        if (statusBadge) {
                            const hasReports = post.isReported && post.pendingReportsCount > 0;
                            if (hasReports) {
                                statusBadge.innerHTML = `
                                    <span class="badge banned">
                                        <i class="fas fa-flag mr-1"></i>
                                        ${post.reportCount} Report${post.reportCount > 1 ? 's' : ''}
                                    </span>
                                    ${post.pendingReportsCount > 0 ? `
                                    <span class="badge warning text-xs">
                                        ${post.pendingReportsCount} Pending
                                    </span>` : ''}
                                `;
                            } else {
                                statusBadge.innerHTML = `
                                    <span class="badge active">
                                        <i class="fas fa-check mr-1"></i>
                                        Active
                                    </span>
                                `;
                            }
                        }

                        // Update action buttons
                        const actionButtons = postCard.querySelector('.flex.items-center.space-x-2');
                        if (actionButtons && post.pendingReportsCount === 0) {
                            // Remove or disable reports button if no pending reports
                            const reportsBtn = actionButtons.querySelector('button[onclick*="viewReports"]');
                            if (reportsBtn) {
                                reportsBtn.style.display = 'none';
                            }
                        }
                    }
                }
            } catch (error) {
                console.error('Failed to update post card:', error);
            }
        }


    </script>
</body>

</html>