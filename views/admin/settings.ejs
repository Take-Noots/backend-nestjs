<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title || 'Admin Settings' %> - Noot Admin
    </title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.0/axios.min.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#667eea',
                        secondary: '#764ba2',
                        accent: '#f093fb',
                        success: '#10b981',
                        warning: '#f59e0b',
                        error: '#ef4444',
                        dark: '#1f2937',
                        light: '#f9fafb'
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-in': 'slideIn 0.3s ease-out',
                        'bounce-in': 'bounceIn 0.6s ease-out',
                        'pulse-dot': 'pulse 2s infinite'
                    }
                }
            }
        }
    </script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes slideIn {
            from { transform: translateX(-100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        @keyframes bounceIn {
            0% { transform: scale(0.3); opacity: 0; }
            50% { transform: scale(1.05); }
            70% { transform: scale(0.9); }
            100% { transform: scale(1); opacity: 1; }
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .glass-effect {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .card-hover {
            transition: all 0.3s ease;
        }
        
        .card-hover:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        .sidebar-item {
            transition: all 0.3s ease;
            position: relative;
        }
        
        .sidebar-item:hover {
            transform: translateX(4px);
        }
        
        .sidebar-item.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 0 4px 4px 0;
        }
        
        .sidebar-mobile-overlay {
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 40;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        
        .sidebar-mobile-overlay.show {
            opacity: 1;
            visibility: visible;
        }
        
        @media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }
            
            .sidebar.show {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
            }
        }
    </style>
</head>

<body class="bg-gray-50 min-h-screen">
    <!-- Mobile Sidebar Overlay -->
    <div id="sidebarOverlay" class="sidebar-mobile-overlay lg:hidden"></div>
    
    <!-- Sidebar -->
    <div id="sidebar" class="sidebar fixed inset-y-0 left-0 z-50 w-64 gradient-bg text-white">
        <div class="flex items-center justify-between h-16 px-4 border-b border-white/10">
            <div class="flex items-center space-x-3">
                <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                    <span class="text-2xl">ðŸŽµ</span>
                </div>
                <div>
                    <h1 class="text-xl font-bold">Noot Admin</h1>
                    <p class="text-xs text-white/70">Music Social Platform</p>
                </div>
            </div>
            <!-- Mobile Close Button -->
            <button id="closeSidebar" class="lg:hidden p-2 text-white/70 hover:text-white">
                <i class="fas fa-times"></i>
            </button>
        </div>
        
        <nav class="mt-8 px-4 space-y-2">
            <a href="/admin" class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-home w-5 h-5 mr-3"></i>
                Dashboard
            </a>
            <a href="/admin/users" class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-users w-5 h-5 mr-3"></i>
                Users
                <span class="ml-auto bg-red-500 text-xs px-2 py-1 rounded-full" id="usersCount">0</span>
            </a>
            <a href="/admin/posts" class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-newspaper w-5 h-5 mr-3"></i>
                Posts
                <span class="ml-auto bg-blue-500 text-xs px-2 py-1 rounded-full" id="postsCount">0</span>
            </a>
            <a href="/admin/reports" class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-flag w-5 h-5 mr-3"></i>
                Reports
                <span class="ml-auto bg-yellow-500 text-xs px-2 py-1 rounded-full animate-pulse-dot" id="reportsCount">0</span>
            </a>
            <a href="/admin/fanbases" class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-heart w-5 h-5 mr-3"></i>
                Fanbases
                <span class="ml-auto bg-pink-500 text-xs px-2 py-1 rounded-full" id="fanbasesCount">0</span>
            </a>
            <a href="/admin/analytics" class="sidebar-item flex items-center px-4 py-3 text-sm font-medium rounded-lg hover:bg-white/10 transition-all relative">
                <i class="fas fa-chart-bar w-5 h-5 mr-3"></i>
                Analytics
            </a>
            <a href="/admin/settings" class="sidebar-item active flex items-center px-4 py-3 text-sm font-medium rounded-lg bg-white/10 relative">
                <i class="fas fa-cog w-5 h-5 mr-3"></i>
                Settings
            </a>
        </nav>
        
        <div class="absolute bottom-4 left-4 right-4">
            <div class="glass-effect rounded-lg p-4">
                <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 rounded-full bg-white/20 flex items-center justify-center">
                        <i class="fas fa-user text-sm"></i>
                    </div>
                    <div class="flex-1 min-w-0">
                        <% if (typeof user !== 'undefined' && user) { %>
                        <p class="text-sm font-medium text-white truncate"><%= user.username || user.email %></p>
                        <p class="text-xs text-white/70 truncate"><%= user.email %></p>
                        <% } else { %>
                        <p class="text-sm font-medium text-white truncate">Admin User</p>
                        <p class="text-xs text-white/70 truncate">admin@noot.com</p>
                        <% } %>
                    </div>
                </div>
                <form action="/admin/logout" method="POST" class="mt-3">
                    <button type="submit" class="w-full px-3 py-2 text-xs font-medium text-white bg-white/10 rounded-lg hover:bg-white/20 transition-colors">
                        <i class="fas fa-sign-out-alt mr-2"></i>
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content lg:ml-64">
        <!-- Top Bar -->
        <header class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-30">
            <div class="flex items-center justify-between px-4 lg:px-6 py-4">
                <div class="flex items-center space-x-4">
                    <!-- Mobile Menu Button -->
                    <button id="openSidebar" class="lg:hidden p-2 text-gray-600 hover:text-gray-900">
                        <i class="fas fa-bars text-xl"></i>
                    </button>
                    
                    <h2 class="text-xl lg:text-2xl font-bold text-gray-900">Admin Settings</h2>
                    <span class="hidden sm:inline-flex px-3 py-1 text-xs font-medium text-green-800 bg-green-100 rounded-full">
                        <i class="fas fa-circle text-green-500 mr-1"></i>
                        All Systems Operational
                    </span>
                </div>
                
                <div class="flex items-center space-x-2 lg:space-x-4">
                    <!-- Search -->
                    <div class="relative hidden md:block">
                        <input type="text" placeholder="Search..." class="w-48 lg:w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                    </div>
                    
                    <!-- Notifications -->
                    <button class="relative p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100">
                        <i class="fas fa-bell text-lg lg:text-xl"></i>
                        <span id="notificationBadge" class="absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center hidden">0</span>
                    </button>
                    
                    <!-- Profile -->
                    <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 rounded-full gradient-bg flex items-center justify-center">
                            <i class="fas fa-user text-white text-sm"></i>
                        </div>
                        <% if (typeof user !== 'undefined' && user) { %>
                        <span class="hidden sm:inline-flex px-3 py-1 text-sm font-medium text-purple-800 bg-purple-100 rounded-full"><%= user.role %></span>
                        <% } %>
                    </div>
                </div>
            </div>
        </header>

        <!-- Page Content -->
        <main class="p-4 lg:p-6">
            <!-- Admin Settings -->
            <div class="space-y-6 animate-fade-in">
                <!-- Settings Overview -->
                <div class="bg-white rounded-xl shadow-sm p-6">
                    <div class="flex items-center justify-between mb-6">
                        <div>
                            <h2 class="text-2xl font-bold text-gray-900">System Settings</h2>
                            <p class="text-gray-600 mt-1">Manage basic platform configuration and preferences</p>
                        </div>
                        <div class="flex items-center space-x-2">
                            <span class="px-3 py-1 text-xs font-medium text-green-800 bg-green-100 rounded-full">
                                <i class="fas fa-check-circle mr-1"></i>
                                All Systems Operational
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Platform Settings -->
                <div class="bg-white rounded-xl shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6">
                        <i class="fas fa-cog text-primary mr-2"></i>
                        Platform Settings
                    </h3>
                    
                    <form id="settingsForm" class="space-y-6">
                        <!-- Basic Information -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Platform Name</label>
                                <input type="text" name="platformName" value="Noot Music" 
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Support Email</label>
                                <input type="email" name="supportEmail" value="support@noot.com" 
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                            </div>
                        </div>

                        <!-- User Registration -->
                        <div class="space-y-4">
                            <h4 class="text-md font-medium text-gray-900">User Registration</h4>
                            <div class="flex items-center justify-between">
                                <div>
                                    <label class="text-sm font-medium text-gray-700">Allow New User Registration</label>
                                    <p class="text-xs text-gray-500">Enable or disable new user sign-ups</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" name="allowRegistration" checked class="sr-only peer">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                            <div class="flex items-center justify-between">
                                <div>
                                    <label class="text-sm font-medium text-gray-700">Email Verification Required</label>
                                    <p class="text-xs text-gray-500">Require email verification for new accounts</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" name="emailVerificationRequired" checked class="sr-only peer">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                        </div>

                        <!-- Content Moderation -->
                        <div class="space-y-4">
                            <h4 class="text-md font-medium text-gray-900">Content Moderation</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Max Post Length</label>
                                    <input type="number" name="maxPostLength" value="500" min="100" max="2000"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Auto-Moderate Profanity</label>
                                    <select name="profanityFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                                        <option value="off">Disabled</option>
                                        <option value="low">Low Sensitivity</option>
                                        <option value="medium" selected>Medium Sensitivity</option>
                                        <option value="high">High Sensitivity</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <!-- Notifications -->
                        <div class="space-y-4">
                            <h4 class="text-md font-medium text-gray-900">Admin Notifications</h4>
                            <div class="flex items-center justify-between">
                                <div>
                                    <label class="text-sm font-medium text-gray-700">Email Alerts for New Users</label>
                                    <p class="text-xs text-gray-500">Send email when new users register</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" name="emailNewUserAlerts" checked class="sr-only peer">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                            <div class="flex items-center justify-between">
                                <div>
                                    <label class="text-sm font-medium text-gray-700">Email Alerts for Reports</label>
                                    <p class="text-xs text-gray-500">Send email when content is reported</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" name="emailReportAlerts" checked class="sr-only peer">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>
                        </div>

                        <!-- Maintenance Mode -->
                        <div class="space-y-4">
                            <h4 class="text-md font-medium text-gray-900">Maintenance Mode</h4>
                            <div class="flex items-center justify-between">
                                <div>
                                    <label class="text-sm font-medium text-gray-700">Enable Maintenance Mode</label>
                                    <p class="text-xs text-gray-500">Temporarily disable user access</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" name="maintenanceMode" class="sr-only peer" onchange="toggleMaintenanceOptions()">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-red-600"></div>
                                </label>
                            </div>
                            <div id="maintenanceOptions" class="hidden">
                                <label class="block text-sm font-medium text-gray-700 mb-2">Maintenance Message</label>
                                <textarea name="maintenanceMessage" rows="3" 
                                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                                          placeholder="We're currently performing scheduled maintenance. Please check back soon!"></textarea>
                            </div>
                        </div>

                        <!-- Save Button -->
                        <div class="flex justify-end pt-6 border-t">
                            <button type="submit" class="bg-primary text-white px-6 py-3 rounded-lg hover:bg-opacity-90 transition-colors">
                                <i class="fas fa-save mr-2"></i>
                                Save Settings
                            </button>
                        </div>
                    </form>
                </div>

                <!-- System Information -->
                <div class="bg-white rounded-xl shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6">
                        <i class="fas fa-info-circle text-primary mr-2"></i>
                        System Information
                    </h3>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <h4 class="font-medium text-gray-700 mb-3">Server Details</h4>
                            <div class="space-y-2 text-sm">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Server Time:</span>
                                    <span class="text-gray-900" id="serverTime">--</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Uptime:</span>
                                    <span class="text-gray-900">7 days, 14 hours</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Version:</span>
                                    <span class="text-gray-900">v1.0.0</span>
                                </div>
                            </div>
                        </div>
                        <div>
                            <h4 class="font-medium text-gray-700 mb-3">Quick Actions</h4>
                            <div class="space-y-2">
                                <button onclick="createBackup()" class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm">
                                    <i class="fas fa-download mr-2"></i>
                                    Create Backup
                                </button>
                                <button onclick="clearCache()" class="w-full bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700 transition-colors text-sm">
                                    <i class="fas fa-broom mr-2"></i>
                                    Clear Cache
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
        <div class="bg-white rounded-lg p-6 flex items-center space-x-3">
            <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-primary"></div>
            <span class="text-gray-700">Loading...</span>
        </div>
    </div>

    <script>
        // Mobile sidebar functionality
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        const openSidebarBtn = document.getElementById('openSidebar');
        const closeSidebarBtn = document.getElementById('closeSidebar');

        function openSidebar() {
            sidebar.classList.add('show');
            sidebarOverlay.classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function closeSidebar() {
            sidebar.classList.remove('show');
            sidebarOverlay.classList.remove('show');
            document.body.style.overflow = '';
        }

        if (openSidebarBtn) {
            openSidebarBtn.addEventListener('click', openSidebar);
        }

        if (closeSidebarBtn) {
            closeSidebarBtn.addEventListener('click', closeSidebar);
        }

        if (sidebarOverlay) {
            sidebarOverlay.addEventListener('click', closeSidebar);
        }

        // Toast notifications
        function showToast(message, type = 'info') {
            const toastContainer = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `px-6 py-4 rounded-lg shadow-lg flex items-center space-x-3 transform translate-x-full transition-transform duration-300 ${
                type === 'success' ? 'bg-green-500 text-white' :
                type === 'error' ? 'bg-red-500 text-white' :
                type === 'warning' ? 'bg-yellow-500 text-white' :
                'bg-blue-500 text-white'
            }`;
            
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'exclamation-triangle' : type === 'warning' ? 'exclamation' : 'info'}-circle"></i>
                <span>${message}</span>
                <button onclick="this.parentElement.remove()" class="ml-4 text-white/70 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            `;
            
            toastContainer.appendChild(toast);
            
            setTimeout(() => {
                toast.classList.remove('translate-x-full');
            }, 100);
            
            setTimeout(() => {
                toast.classList.add('translate-x-full');
                setTimeout(() => toast.remove(), 300);
            }, 5000);
        }

        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('hidden');
        }

        // Toggle maintenance options
        function toggleMaintenanceOptions() {
            const checkbox = event.target;
            const options = document.getElementById('maintenanceOptions');
            
            if (checkbox.checked) {
                options.classList.remove('hidden');
                showToast('Maintenance mode will be enabled when settings are saved', 'warning');
            } else {
                options.classList.add('hidden');
            }
        }

        // Quick action functions
        async function createBackup() {
            if (!confirm('Create a new system backup? This may take a few minutes.')) return;
            
            try {
                showLoading();
                // Simulate API call
                await new Promise(resolve => setTimeout(resolve, 2000));
                showToast('Backup created successfully!', 'success');
            } catch (error) {
                showToast('Failed to create backup', 'error');
            } finally {
                hideLoading();
            }
        }

        async function clearCache() {
            if (!confirm('Clear system cache? This will temporarily slow down the platform.')) return;
            
            try {
                showLoading();
                // Simulate API call
                await new Promise(resolve => setTimeout(resolve, 1000));
                showToast('Cache cleared successfully!', 'success');
            } catch (error) {
                showToast('Failed to clear cache', 'error');
            } finally {
                hideLoading();
            }
        }

        // Form submission
        document.getElementById('settingsForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            try {
                showLoading();
                
                // Convert FormData to regular object
                const formData = new FormData(this);
                const settings = {};
                
                for (let [key, value] of formData.entries()) {
                    // Handle checkboxes
                    if (value === 'on') {
                        settings[key] = true;
                    } else {
                        settings[key] = value;
                    }
                }
                
                // Add unchecked checkboxes as false
                const checkboxes = this.querySelectorAll('input[type="checkbox"]');
                checkboxes.forEach(checkbox => {
                    if (!formData.has(checkbox.name)) {
                        settings[checkbox.name] = false;
                    }
                });
                
                // Simulate API call
                const response = await axios.post('/admin/settings', settings);
                
                if (response.status === 200) {
                    showToast('Settings saved successfully!', 'success');
                    
                    // Special handling for maintenance mode
                    if (settings.maintenanceMode) {
                        showToast('Maintenance mode is now active. Users will see the maintenance page.', 'warning');
                    }
                } else {
                    showToast('Failed to save settings', 'error');
                }
            } catch (error) {
                showToast('Failed to save settings: ' + (error.response?.data?.message || error.message), 'error');
            } finally {
                hideLoading();
            }
        });

        // Update server time
        function updateServerTime() {
            const now = new Date();
            const serverTimeElement = document.getElementById('serverTime');
            if (serverTimeElement) {
                serverTimeElement.textContent = now.toLocaleString();
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Update server time initially and then every second
            updateServerTime();
            setInterval(updateServerTime, 1000);
            
            // Add fade-in animation to content
            const main = document.querySelector('main');
            if (main) {
                main.style.opacity = '0';
                main.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    main.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    main.style.opacity = '1';
                    main.style.transform = 'translateY(0)';
                }, 100);
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                if (e.key === 's') {
                    e.preventDefault();
                    document.getElementById('settingsForm').dispatchEvent(new Event('submit'));
                }
            }
        });
    </script>
</body>

</html>